00000000 move
00000010 dest->r0 src<-r2 imm
00110100 34
11010001 d1
00000000 move
00010010 dest->r0 src<-r2 reg
10111101 bd
01111100 7c
00000000 move
00100010 dest->r0 src<-r2 reg+imm
11001010 ca
01110010 72
00000000 dest->r0 src<-r0 move
00110010 dest->r0 src<-r2 reg+reg
10100111 a7
11111011 fb
00000001 bitwise or
00100010 dest->r0 src<-r2 reg+imm
00010111 17
01101010 6a
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
10000011 83
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00010010 12 dest->r0 src<-r2  invalid cmd                          reg    
10101111 af
01100101 65
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
00101010 2a dest->r2 src<-r2  invalid cmd                          reg+imm
10111010 ba
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
01100011 63
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
10010011 93
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
10000111 87
11110010 f2
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
10100010 a2
10100011 a3
00000100 04 dest->r1 src<-r0 0x04 bitwise negation                 imm    
00110001 31 dest->r0 src<-r1  invalid cmd                          reg+reg
00000110 06 dest->r1 src<-r2 0x06 subtraction                      imm    
01100011 63
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00110010 32 dest->r0 src<-r2  invalid cmd                          reg+reg
00001010 0a dest->r2 src<-r2 0x0a increment                        imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
00001000 08 dest->r2 src<-r0 0x08 shift left                       imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00000100 04 dest->r1 src<-r0 0x04 bitwise negation                 imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000100 04 dest->r1 src<-r0 0x04 bitwise negation                 imm    
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00001011 0b dest->r2 src<-r3 0x0b decrement                        imm    
00110001 31 dest->r0 src<-r1  invalid cmd                          reg+reg
00001111 0f dest->r3 src<-r3 0x0f jump to nth opcode when not zero imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00010000 10 dest->r0 src<-r0 0x10 jump to nth opcode when zero     reg    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
01100010 62
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
01000110 46
01000010 42
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00010010 12 dest->r0 src<-r2  invalid cmd                          reg    
11011011 db
01100111 67
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
10000001 81
10010000 90
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00100111 27 dest->r1 src<-r3  invalid cmd                          reg+imm
10001111 8f
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
00111111 3f dest->r3 src<-r3  invalid cmd                          reg+reg
01011100 5c
00001000 08 dest->r2 src<-r0 0x08 shift left                       imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
11101010 ea
10100111 a7
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
01111000 78
10010001 91
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
11100010 e2
11000110 c6
00000110 06 dest->r1 src<-r2 0x06 subtraction                      imm    
00100011 23 dest->r0 src<-r3  invalid cmd                          reg+imm
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
10000011 83
00000100 04 dest->r1 src<-r0 0x04 bitwise negation                 imm    
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
10110011 b3
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
10000011 83
00001001 09 dest->r2 src<-r1 0x09 shift right                      imm    
00100010 22 dest->r0 src<-r2  invalid cmd                          reg+imm
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
01100001 61
11000101 c5
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
10000011 83
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00100011 23 dest->r0 src<-r3  invalid cmd                          reg+imm
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
11110011 f3
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
10000011 83
00001000 08 dest->r2 src<-r0 0x08 shift left                       imm    
00010010 12 dest->r0 src<-r2  invalid cmd                          reg    
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
00000000 00 dest->r0 src<-r0 0x00 move                             imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
00010010 12 dest->r0 src<-r2  invalid cmd                          reg    
10111111 bf
01111000 78
00000001 01 dest->r0 src<-r1 0x01 bitwise or                       imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
10011010 9a
00011101 1d dest->r3 src<-r1  invalid cmd                          reg    
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
11000011 c3
00000011 03 dest->r0 src<-r3 0x03 bitwise and                      imm    
01000011 43
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00110010 32 dest->r0 src<-r2  invalid cmd                          reg+reg
01100010 62
11001000 c8
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00010010 12 dest->r0 src<-r2  invalid cmd                          reg    
11001011 cb
11010100 d4
00000101 05 dest->r1 src<-r1 0x05 addition                         imm    
00110010 32 dest->r0 src<-r2  invalid cmd                          reg+reg
00001111 0f dest->r3 src<-r3 0x0f jump to nth opcode when not zero imm    
00001001 09 dest->r2 src<-r1 0x09 shift right                      imm    
00000111 07 dest->r1 src<-r3 0x07 multiplication                   imm    
00000010 02 dest->r0 src<-r2 0x02 bitwise xor                      imm    
11011000 d8
10011011 9b

